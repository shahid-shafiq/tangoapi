openapi: 3.0.0
info:
  title: TangoAPI
  version: '1.0'
  description: |-
    Tango API specification based on Tango 4.00.5.
    The API describes how to obtain authentication ticket and use it in the subsequent calls. The project list and preview request can be used through this API.
  contact:
    name: Shahid Shafiq
    email: shahid_shafiq@elixir.com
  license:
    name: Tango API License
servers:
  - url: 'http://localhost:3000/tango/api'
paths:
  /tickets:
    parameters: []
    post:
      summary: Get authentication ticket
      operationId: post-tickets
      responses:
        '201':
          description: Created
          content:
            application/xml-dtd:
              schema:
                type: object
                properties:
                  ticket:
                    type: string
                    format: byte
                required:
                  - ticket
        '401':
          description: Unauthorized
          content:
            text/html:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
          headers: {}
      tags:
        - Authentication
      description: Before accessign any resources from Tango API an authentication ticket is required. The ticket is issued only to authorized users.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usernamed:
                  type: string
                  description: Authorized username
                password:
                  type: string
                  description: Password for the authorized user
              required:
                - usernamed
                - password
            examples: {}
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Authorized username
                password:
                  type: string
                  description: Password for the username
              required:
                - username
                - password
        description: The user information is provided in the body.
      parameters: []
components:
  schemas: {}
  securitySchemes: {}
